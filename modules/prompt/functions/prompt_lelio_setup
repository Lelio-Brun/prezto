# Load dependencies.
pmodload 'helper'

function prompt_lelio_git_info {
  # We can safely split on ':' because it isn't allowed in ref names.
  IFS='' read _git_target _git_post_target <<<"$3"

  # The target actually contains 3 space separated possibilities, so we need to
  # make sure we grab the first one.
  # _git_target=$(coalesce ${(@)${(z)_git_target}})

  if [[ -z "$_git_target" ]]; then
    # No git target detected, flush the git fragment and redisplay the prompt.
    if [[ -n "$_prompt_lelio_git" ]]; then
      _prompt_lelio_git=''
      zle && zle reset-prompt
    fi
  else
    # Git target detected, update the git fragment and redisplay the prompt.
    _prompt_lelio_git="${(e)_git_target}${_git_post_target}"
    zle && zle reset-prompt
  fi
}

function prompt_lelio_async_git {
  cd -q "$1"
  if (( $+functions[git-info] )); then
    git-info
    print ${git_info[status]}
  fi
}

function prompt_lelio_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Format PWD.
  _prompt_lelio_pwd=$(prompt-pwd)

  # Kill the old process of slow commands if it is still running.
  async_flush_jobs async_lelio_git

  # Handle updating git data. We also clear the git prompt data if we're in a
  # different git root now.
  if (( $+functions[git-dir] )); then
    local new_git_root="$(git-dir 2> /dev/null)"
    if [[ $new_git_root != $_lelio_cur_git_root ]]; then
      _prompt_lelio_git=''
      _lelio_cur_git_root=$new_git_root
    fi
  fi

  local switch_name="$(tail -n 1 ~/.opam/config | grep -Po '"\K.*(?=")')"
  local env_switch_name="$(which ocamlc | grep -Po '.opam/\K([^/]+)(?=/)')"
  if [ "$switch_name" = "$env_switch_name" ]; then
      _prompt_lelio_opam="%F{3}$switch_name"
  else
      _prompt_lelio_opam="%F{1}$switch_name"
  fi

  # Run python info (this should be fast and not require any async)
  if (( $+functions[python-info] )); then
    python-info
  fi

  # Compute slow commands in the background.
  async_job async_lelio_git prompt_lelio_async_git "$PWD"
}

function prompt_lelio_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent sp subst)
  _prompt_lelio_precmd_async_pid=0
  _prompt_lelio_precmd_async_data=$(mktemp "${TMPDIR:-/tmp}/lelio-prompt-async-XXXXXXXXXX")

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz async && async

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_lelio_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{7}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format ' %B%F{1}❯%F{3}❯%F{2}❯%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format ' %F{3}♺%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format ' %B%F{2}❮%F{3}❮%F{1}❮%f%b'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format '%F{7}:%f%%B%F{9}%s%f%%b'
  zstyle ':prezto:module:git:info:added' format '%F{2}+%f'
  zstyle ':prezto:module:git:info:ahead' format '%F{14}➚%f'
  zstyle ':prezto:module:git:info:behind' format '%F{13}➘%f'
  zstyle ':prezto:module:git:info:branch' format '%F{8}%b%f'
  zstyle ':prezto:module:git:info:commit' format '%F{6}%.7c%f'
  zstyle ':prezto:module:git:info:deleted' format '%F{1}-%f'
  zstyle ':prezto:module:git:info:modified' format '%F{3}*%f'
  zstyle ':prezto:module:git:info:position' format '%F{12}%p%f'
  zstyle ':prezto:module:git:info:renamed' format '%F{11}⟲%f'
  zstyle ':prezto:module:git:info:stashed' format '%F{15}⬕%f'
  zstyle ':prezto:module:git:info:unmerged' format '%F{9}⧎%f'
  zstyle ':prezto:module:git:info:untracked' format '%F{10}¤%f'
  zstyle ':prezto:module:git:info:keys' format \
    'status' ' $(coalesce "%b" "%p" "%c")%s%A%B%S%a%d%m%r%U%u'

  # Set up non-zero return value display
  local show_return="✘ "
  # Default is to show the return value
  if zstyle -T ':prezto:module:prompt' show-return-val; then
    show_return+='%? '
  fi
  # Set python-info format
  zstyle ':prezto:module:python:info:virtualenv' format '%f%F{3}(%v)%F{7} '

  # Get the async worker set up
  async_start_worker async_lelio_git -n
  async_register_callback async_lelio_git prompt_lelio_git_info
  _lelio_cur_git_root=''

  _prompt_lelio_git=''
  _prompt_lelio_pwd=''
  _prompt_lelio_opam=''

  # Define prompts.
  PROMPT='${SSH_TTY:+"%F{9}%n%f%F{7}@%f%F{3}%m%f "}%F{4}${_prompt_lelio_pwd}%(!. %B%F{1}#%f%b.)${_prompt_lelio_git}${editor_info[keymap]} '
  RPROMPT='${_prompt_lelio_opam}'
  RPROMPT+='$python_info[virtualenv]${editor_info[overwrite]}%(?:: %F{1}'
  RPROMPT+=${show_return}
  RPROMPT+='%f)${VIM:+" %B%F{6}V%f%b"}'
  SPROMPT='zsh: correct %F{1}%R%f to %F{2}%r%f [nyae]? '
}

function prompt_lelio_preview {
  local +h PROMPT=''
  local +h RPROMPT=''
  local +h SPROMPT=''

  editor-info 2> /dev/null
  prompt_preview_theme 'lelio'
}

prompt_lelio_setup "$@"
